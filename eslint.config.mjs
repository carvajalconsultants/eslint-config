import globals from "globals";
import pluginJs from "@eslint/js";
import tseslint from "typescript-eslint";
import prettierlint from "eslint-config-prettier";
import pluginReact from "eslint-plugin-react";
import pluginStorybook from "eslint-plugin-storybook";
import pluginReactHooks from "eslint-plugin-react-hooks";
import pluginPreferArrows from "eslint-plugin-prefer-arrow-functions";
import pluginReactRefresh from "eslint-plugin-react-refresh";
import pluginImportX from "eslint-plugin-import-x";

/** @type {import("eslint").Linter.FlatConfig[]} */
export default [
  {
    ignores: [
      // This is auto-generated by Panda so we do not need to lint it.
      "**/styled-system/",

      // This is auto-geenrated by Tanstack
      "**/routeTree.gen.ts",

      // This is auto-generated by Codegen
      "**/gql",

      "**/.vinxi",
      "**/.output",

      // Config files and storybook files that don't need type checking
      "**/*.config.{ts,mjs,cjs}",
      "**/.storybook/**/*.{ts,js}",
      "**/postcss.config.cjs",
    ],
  },

  {
    files: ["apps/**/*.{ts,tsx}", "packages/**/*.{ts,tsx}"],
  },

  {
    settings: {
      react: { version: "19.0" },
    },

    languageOptions: {
      ecmaVersion: "latest",
      sourceType: "module",
      globals: globals.browser,
      parserOptions: {
        projectService: true,
        tsconfigRootDir: import.meta.dirname,
      },
    },
  },

  prettierlint,
  pluginJs.configs.recommended,
  ...tseslint.configs.recommendedTypeChecked,
  ...tseslint.configs.stylisticTypeChecked,
  pluginReact.configs.flat.recommended,
  pluginReact.configs.flat["jsx-runtime"],
  ...pluginStorybook.configs["flat/recommended"],
  pluginReactRefresh.configs.recommended,
  pluginImportX.flatConfigs.recommended,
  pluginImportX.flatConfigs.typescript,

  {
    rules: {
      "@typescript-eslint/consistent-type-imports": "error",
      "react-refresh/only-export-components": ["warn", { allowConstantExport: true }],

      "import-x/no-default-export": "error",

      // Doing this like throw redirect() fail if this is on
      "@typescript-eslint/only-throw-error": "off",
    },
  },

  {
    files: [
      // Stories need default exports, so we disable the rule there: https://github.com/storybookjs/storybook/issues/12914#issue-729393535
      "**/*.stories.tsx",

      // Library config files typically use default exports, so we disable the rule
      "**/*.config.ts",

      // Tanstack Start config files need default export, so we disable the rule
      "**/ssr.tsx",
      "**/api.ts",
    ],
    rules: {
      "import-x/no-default-export": "off",
    },
  },

  // https://github.com/facebook/react/issues/28313#issuecomment-2580001921
  {
    plugins: {
      "react-hooks": pluginReactHooks,
    },
    rules: {
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
    },
  },

  // Prefer arrow functions in all of our code
  {
    plugins: {
      "prefer-arrow-functions": pluginPreferArrows,
    },
    rules: {
      "prefer-arrow-functions/prefer-arrow-functions": [
        "error",
        {
          returnStyle: "implicit",
        },
      ],
      "prefer-arrow-callback": ["error", { allowNamedFunctions: false }],
      "func-style": ["error", "expression", { allowArrowFunctions: false }],
    },
  },
];

